<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gQXCR8b5/glMgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABaESURBVHhe
        7d0L+G1jgcfxMxrkcsQcTkhIJnflMjRuUREhI6mUe7ml5pIMk1xGo2mSCiN3Os2YkkouMwkNo6eLyBBD
        EQoRcguR2/T7neP/nG2f3957Xd611vuu9/d9ns/T43T++7/3Wnvvs/da73rfaS65ToB/gdfN/i/nXFbx
        DeD/4QX4JvwFOOcy6VDgG8Cgy+DN4JzreXvA8BvAlB/BduCc62lbgXrxD7oYXgPOuZ61JqgX/bDfw8dh
        AXDO9aQZoF7wo9wMm4Nzric9C+rFPs6XYSY45xLvaVAv8kkehv1hPnDOJVrVN4ApV8Ey4JxLsLpvAHQv
        bAzOucQK8QZAz8CB4JxLqFBvAFNmwcvBOZdAod8A6DpYEZxzkdfEGwD9FrYE51yk8RTec6BewCE8D7zg
        yDkXYUuBeuGG9g2YDs65iFoL1Au2CRxG7IlHnIsofkdXL9am3A9rg3MugnYD9UJt0kOwPjjnOu5gUC/S
        pj0KG4FzrsOOA/UCbcMTsAU45zrqHFAvzrZwopGtwTnXQZz3T70w2/QH8JuAcy33J/A7UC/KtvHrgKck
        d67FVgD1YuzKA7AyOOdaaFtQL8Qu3Q6vBOdcw/09qBdh134Ci4JzrsE4sad6AcbgUpgfnHMNxX9p1Ysv
        Fv8OPFDpnAvcy4Dn4NULLyaHgXMucBuAesHFhvMJeFIR5wIX6wFAhTMLLQ/OuUD9F6gXW6yugQXBOVcz
        fv+PZQRgGaeBc65mqXz/V/YC51yNUvr+P+wpWAeccxVL7fv/sDtgcXDOlWwBSPH7/7CzwTlXsm1AvaBS
        9HZwzpXoDFAvphTdA68A51yBePqP19yrF1OqzgLnXIE2B/UiSh2/1jjnJnQCqBdQ6vxVwLkJ8bLau0G9
        gPrgTHDOjWhDUC+cPvHMws6N6ERQL5o+4SecRcA5NxBfFI+BetH0zT9Ck/3pi//rXDLtC+rF0kdPwnLQ
        VBxJ+WnwfIUuma4H9WLpK0522mT8OvVdWGL2fzkXcVyBV71I+uwFaHL58fWAv+dn4IVMXNRxZt3hF0gO
        roImuxH4ezhdGedXcC66lgIuvDn84sjFTtBUB8HU73kU/CbgoutQGHxB5IbLjPGgXROtCIO/i28CXtzU
        RdN88EsYfJLm6GPQVMPb9xFo8tiDc4XbDgafnLniv8xLQhPNguHfxzcBHiR0rtNSn/YrpOOhifYG9fse
        hnXBuU5aCXgqTD05c8Ql0Jr4FMDtrH4fPQSrg3Ot9xlQT8qcHQ1NNO4KSx4jWBqca62XA89Nqydkzvix
        fFEI3YWgft8UrsDsC5Rca+0O6olo06Z9FEJXZJKVi4HTsTnXaJz0I/Y1/7vEmYNCjwvgm4r6XcNOBuca
        7V2gnnw2F4/ch4yjDdXvUQ4B5xqJHzF5cYp64tlctwA/KYVq6sKgInhm5r3gXPBGnZO2ee0IoZoB6neM
        8jRsCs4Fi+vm3wXqCWfzuhpCVvaCK44RWAGcC9LfgXqi2WhbQKg4C5H6HeNcA3zjdq5W0+FBUE8yG+3b
        EKqqi62eAs7V6khQTy4bjwfkQn0M5wVH6ncUsRs4VymOb+/DUt9d4ZtniPidXt1+Efz6sBY4V7rPgXpS
        WTF3QohTgnW/gt0Ki4FzhXs18JSSekJZcW+Gut0P6rbL+AY4V7g+rfPfJU6aWicOwHoW1G2XxXkGnZvY
        KvAcqCeRlcO5AuqsLMwDiep2q+AbiQcJRVDs52fPA/UEsmr2g6ptDuo2q7oXXgmuw0IdHW4ijj33bD9h
        1RkZuCeo26yDcwy4juLAmqcg1nfhK0E9aayeNaBKXIxU3V5du4LroKmru/559n/FVRP/2tgcn4UqcR1C
        dXt1cQajZcC13C7AHcDRXTGdm+WgH0/11Ryeyquy9PdPQd1eCBeAa7nBobUH8w8iSc1Bb2HtAGXiWAx1
        OyH5q0DLnQNTG//X0NTSUmXiYJXBJ4U142tQJp49ULcTEocZe2bhFuNlmoM74APQZZzll0NFB++TNYPX
        VZR5w580I3Ao3wLXUo/B4MbnNFtcZ6+rPgmD98eatRUUiW/MVeYBqOr94BqOp/7Uxn8ndNFqkPPy3l04
        EYq0Daifb4q/CrQQh2GqjR96Cqki8Sq1q0DdH2sOV/MpEo8XqJ9vkr8KNNyHQG142gTa7IOg7oc17/Uw
        rnWgq9GY7wPXUFzBRW10Og7aaiZwIIi6H9a8T8C4ulx5mWNBFgcXuIWBV4apjU6cT76tBk9FWvt+DKPi
        J0H1M21q8x+jbNoe1MYexOWgm45HodXvtvbw4/2oYbj/A+pn2vQMrAwuYKeB2tiDPgxNthDcDup3W7v2
        geF4Nkj93S6cDy5QPOLOUX9qQw/id78m+zSo32vtuwgG44G/x0H93a5wLgIXoPVBbeBhvEyY/0o3Eb9b
        epafePB4EI8LseWgyD8QbbsOuhyk1puOArWBlW0hdJySiuef1e+z7rwDOD/EDQN/Fpu9wNWszJr6J0Ho
        ODGl+l3WrS8BVxBS/18sOIXYIuAq9ipQG3YUziUfMg7sUL/HrCheL+Iqtj+ojTrOqhAizihbZ1kpM+Lx
        Cs5N4CrEcf5qo47zHqgb55P/HqjbNyur7voGWbYuqI05yRFQNw43VbdtVgUHL20ArkSng9qYk3Cobp24
        o0KtJmM25fvgCsZTb1UndLgWqrYo3Abqds3qeiu4An0E1AYsgiPCqnYmqNs0C4GnLV2Bbga1AYtaFsq2
        E6jbMgtpTXBjehOoDVfGFlAmjjfgtE7qtsxCOhvcmL4KasOVwfEDRePFRpeDuh2z0DiPpFcVGhEn/uT1
        1GrDlfF5KNqhoG7DrCkxLm0XRR8HtcHKKnpp8Fsgx6v8nhB/Zu15BHjGyQ3EudzvA7XByuKacJPi8MwH
        QP183/0VVBllaeH8DbiBDgC1oaq4B8a1IOT8AtgZuMrOyQN/Zu3ihWsccu4QV37lBlEbqgpODjKuU0H9
        XC4Ogal2h3ETrlpzQly30ot2A7WB6hg1O9DeoP5+TvgGOBjn2v8FqL9rzRk3w3E28TTc/4HaQHVwqqjh
        eIERPx2ov58TnvYcjvPZt7Wgps21GWTdjqA2TF1rw2AzwFN7zcHZjVV8M+aZmOdB/ZyFxzfdrBte8juU
        wdGAnJzxO6D+Xo5+A+PiWYKnQf2shcVLhVeBLNsS1EYJgWP7p/onUH8nV/fDpLhv2lxiO2dHQ5ZdAWqD
        hLAvMM4e29VikbHi+IcibQyeFq15bS5tF01/CWpjhMIhvn8OfgLP60EoGg+c8u+r27Fw1oKsGrfabwhf
        hBuH/szm4Cq2ZVoNYlx8o0+y+hrwBlAbISSv5DMaL30u22vgDlC3Z/Vl9TXgPFAbwdrBi1GqxHkT6k7W
        YqNl8TWA8/b7PHO3yn4FGGwmeNRgM7L4GvBlUA/e2lP34yYPrvrAYHi9/xrA75Gecrt7PP1aN57F8UVE
        4fX6a8ApoB60tYvTroWIw7j9dS6s3n4N4AEkzoemHrS163gIVZ0p3G1evf0awHn61AO29v0DhOyzoH6P
        VdO7rwFLgceVx4NzIoSMVxGeC+p3WXm9+xrwKVAP1LqxLYSO06xdBer3WTm9+hrAiSYeA/VArRvrQRPx
        k16oiV1ztzr0osNBPUDrDtdfaCpOte4zA/V9CJKPc59z1Jl6gNaNopcC14kLX6jfbcX9ByTfx0A9OOuO
        mg8wdJzl+Yegfr8VcxckXciFPiycz0EbrQiei6Ge5SHZDgT1oKxbe0JbvRvUfbBi3gdJNj/8CtSDsm5x
        hp82OwPU/bDJOKlNku0F6gFZtzhJCr+atdnC4DkEqimyxmV0cQruW0E9IOsWX4hdxBmgfBVoeZzMdhFI
        qreBejDWvVBXAVaJBx/VfbLx1oek8nRf8Qp9EVCZpoMnFi2P62YmE4eC+pLfeG0OXcbVcNX9stE4qCqZ
        DgL1IGw8ztDT9CzGvB6DZ2e6jgOR1P0z7QJIJh/trea9cOzQn4X2TYghroPnT4nF8YB6Em0E6gHYZJwr
        cSFocrbdfSCWfHl4cfxkyEuto+8sUA/AxhtcqZej9NTfCWE5iCWODfBS7cVFP0MQj/A+AerO23icJn2q
        BaCJ6ye4RFps7QDqvtq8uFx71PHjpbrjNtnOMNgnQP29Oj4DMfYdUPfXXmo/iLqrQd1xG+8ZWAwGmwGh
        59vfAmLsjaDur73UERBtK4G60zbZZaA6GdTfr+J3EMPpv1FdAup+21wnQbQdAOpO22R/DSqeKuM4cPUz
        ZZ0PMccVhtT9trm+DtH2LVB32ibj6b9RXQTqZ8raFWLPxwLG+x5EGT9a8iOmutM23k0wrhAXVT0MbV/+
        WyWPIRkv2sFAm4G6wzYZB8OMi6cE655aDbkEWNNdCuox2Jxh3FF2DKg7bJPxu++kLgT1s0WtAam0MajH
        YHNw9aXouhbUnbXxOOMrJ06ZVJ0DrN+H1OJZEfVYbM5My1G1JIQ6Up2bw6BIPEiofr6IPSC1NgH1WCzC
        6wF2AXVHbTxeCVdmZZ6fg7qdcR4BXlyUYteBeky5i25/fgnUHbXxvgJlOgfU7YxzIqTa/qAeU+64ylZU
        3Qvqjtp4m0KZOAxU3c44Ka8vz6HRvrBsXq+AaOKlpepO2nhVpnkuu7gGl+RKvTNBPbac/RlE09ag7qSN
        x4+3ZVsb1G2Nwnn3Um9DUI8tZ5xvM5q86Gd5HDFZ5XscR/IVXW77GojyfHGFbgD1GHMV1ScAHwAs71+h
        aneCus1hXc/6GzKvLTkX/wEoMm6ktfgvjbqjNtrqULUrQd3moIuhT/Gg15OgHmtufgvRxHci75hy+AKu
        06Sr5ThxZErDfot2NqjHm5ufQTS9FtSdtNF4JL9Oky4NPh36mK8PmCOqYd0+A1AOx0vUnZGHc/qr2yZ+
        GlsG+hgPaHq8SWSLg3wA1J007Uio27mgbpuOhj53KqjHnRNOuR9Nh4O6kzavhyDECK5/A3X790N0Q0QD
        93ZQjz0nUc3qHHLCyr47GEI0atEVXi7c93gV3OOgHn8uOO4mmvh9RN1JeykuhR3qCi4e5Bu+/e9CVOeG
        G4yTYg4//pxsB9HkMQDFhFzMYXhmIB4YK3NJcepxjfzBx5+bcZPHth7/ZVN30ua6DULO4DI4LJbn/DkX
        Y05xGOyzMLiNc8GzPFEN7/bSzpNxue+QPQpTt30o/yDDroDBbZwLTrsXVZ4GbLz/hZDv2IvD1G1zuG9f
        LvYp29/C4HbOxeDisZ3HAS3qTtpcodfhez3wdrmcdlRXhLVcrkvQHQLRtAioO2lz8CrJ0L0D+LVrg9n/
        lXd3g9rufbY9RNMSoO6kzbliizMlh+4jL3LTpp0Hatv3WVRnAGaCupM2bdqe0ERFFhDJpY+C2vZ9dQ9E
        lecC1HiE2jVfbmsIzoKoWhrUHc3Z08DlvF3zcXq0nE5D7w5RxQUr1R3N2VHg2utqUPuhj5aF6PKc7XNx
        ppbolmzqeVzxWO2LvrkZoowLW6o7nBsOiMptSG4McZSl2h99E+3qTteDusO54WXRrv1WBLU/+mYHiDJe
        hqrucE44IIVLWLluug/UfukLXvAV1VJgg30N1J3OSVTXZ2fYJaD2S19cBtF2DKg7nYuyq/u68H0R1L7p
        i10h2nYBdadzwOG+Ua3Rlml9XpqOS8gtDNG2Jqg7noOo35kzakdQ+6cPuDJy1PGS4GdA3fk++29wcTR1
        iXQfJXFq+SZQd77PfDluPE0HtY9SdzskMeELD4SpB9BXnJXWxdUDoPZVykIsItNKB4F6AH3Ec7Krgour
        H4HaX6niyNKorv0f11qgHkQfnQEuvs4Btb9SFfW5f1UO04M/BZwDwcXXJ0Hts1SFnkuy8XJYu/1YcHHW
        p0VqfwDJ1fersjgXf86z8MbeTqD2W4q2heSaAc+DekB9cAK4eNsK1H5LDdeRSDZ+dFEPqg94oNPFGydL
        VfstNe+CZNsX1INK3Q/BxV0fhqTfAkmv8MwRWX2cImxvcHHXh4lBopv0s0o8T64eXKoeA66A5OKOx6DU
        /kvFLyDkCtKdtSGoB5gqT/WVRqnPUB3Vkl91+ymoB5midcClUaprBFwAverDoB5oan4CLp04QYvajzH7
        PfD4Ra9aCPowUSOnO3PpdCeo/Rizw6CX9eFTwDbg0uk2UPsxVj8HHrvoZXxgvwL1wFPAUY2Lg0snrp6r
        9mWstoRetw+oB54CHsh0afUQqH0ZI06n3/t4XpPnN9UGiB2nmnZpxcu11b6MzePwKsgizpyrNkLs3g8u
        nTh3HmfRUfsyNntANnHHXAFqQ8RsBXDpxDNPaj/GZhZk18rA851qg8SIB5NcWnGuBrUvY8Ll47MdVp7S
        6i29G5mVQfxOrfZlLHh8gusXZNvL4MegNk5sol+Nxc0TP2WqfRmLAyD7OKlGCqsIHQcurWKemfo8cC92
        FKiNFJPDwaXVG0Hty67dAdGu7d9F/CpwOaiNFQsOY3Zpxam01L7sEj/tegk50ZIQ8zBhr/qbXgeD2pdd
        4lTlbkTrQawjt7YDl1Ycuan2ZVeSWdevy/YEtfG6tgm4tPo2qH3ZhdPAFewkUBuxS2uASysOslH7sm0X
        Ao9zuYLND1eB2phdeTW4dOJw86dB7cs2cYXihcGVjKdJuCKK2qhd8CIgabUsqP3YJk7uwYPbrmIzgRtR
        bdy2bQ0unTYGtR/b8htIZi3/mONH77tAbeQ2+fRNWnV5yTmv7V8XXKBeB/eD2thtOQJcOnHkptqPTeOL
        /03gAvcG4HLcaqO3wadx0upcUPuxSY8Ahx+7htoIunoT+E9w6XQ3qP3YlAeA/0i5huNG5gEWtROadD24
        NFoO1D5syq9hNXAtxeu8217w4UFwafRuUPuwCb+E14JrOZ7nvQnUTmnKguDi7wug9l9ot4IHiHUY53zj
        SCu1c5qwErj4a2OWqRthaXAdxwkVLwW1k0J7J7i440zATc8wdS3MABdJXHLsDFA7KyQvDBJ/m4Lad6Fc
        BIuBi7AD4VlQOy4EfudzcXcIqH0XwqdgPnARx1FYPGKvdmAIy4OLN07frvZbHU/Ce8AlElfwaepKwr3B
        xRnXnQy9GCinqVsHXGLxGuyvgtqpdXwFXJy9FdQ+q4pzUvCKVJdwhwLX9Vc7uAoO+eRkEy6+TgW1z6o4
        BTgxjetBm0HIS4qzXs4p0jjlFt+c1f4qg6cQvWJPD1sCvg5qp5d1ELi4eguofVUG30D4j4XrcR8EHtVV
        T4CiLgEXVyeD2ldFcZ8uAy6DVoHrQD0RiuAbCAcfuTjix/+qE8ZwiXqv+pRhfAFzwc8XQD0xJnkbuDja
        AtQ+moRDelcFl3FbQZUDhOeDi6OyKwA9B8eAj/K72fGComOhzDBiPok48YTrNg7NLTNBDFfm5YzBzs3T
        2vADUE8c5Whw3cZPcGrfKGfBdHBuZBzksw88DOpJNOg+8MfIbiuy/h+vDdkRnCvcUjAL1BNqEKefct20
        Okw6iMuLgzxxh6vc5nALqCcXXQmum04HtU+Ic0ZuD87VjqcMD4OnQD3Z+C+Razd+QlP74w/AI/ycGci5
        oHFOQPWd80Rw7XYkDO+Hy4GDvJxrtJ2Bc8FPPfEeg0XBtRNnZx4c+Xcv7ALOtRbnhTseOB6AT8L9wLUT
        F2rlNue25xTgnqPPdRZXgb0Gbpj9X66NuB4Ex2t4KS4XRRyNxglJ15j9X67J1gNe0elJWYI3bdofASqs
        W0htor4rAAAAAElFTkSuQmCC
</value>
  </data>
</root>