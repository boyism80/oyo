<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gQXCTAVElwwWAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABPKSURBVHhe
        7d0LvK1zncfxHQ5OlFvuqpNLzMT0IskthtzVuOZgyGXKTDWIMq6jC4ZQCSlq5IWEkryoxrUmud8yg3KI
        pOSSbkcuoZnP93R2r3NWv733/1nP86y9nv//+3m93q/CWWvvvc5/rb3W8zz//3/EjayIjbArDsbJuADf
        w/2Yid/jx7gO5+MkHITpeDumwTnXgebDJjgFD+P/GvIgPgW9mMwL59yQtDB2xnn4NaIncJOewpexPV4J
        59wktCGuwPOInqiD8Cwuxdpwzg2gv8FliJ6Qk+VPuBArwTnXQsvhi3gJ0ZNwGPwRp2JJOOca6NU4Dn9A
        9KQbRjqzcBR8jMC5Gu0IHXSLnmRd8Bi2gnOuYkdDn62jJ1aX6COLrkFwziU0FRchejJ1mU4dzg/n3Bgt
        j9sRPYFycAOWhnOup3Wgz8zREycnP8OacM7Nbic8h+gJkyOd0XgXnCu+t6GkJ/8ovQj4nYArOn3mn4y3
        /S/jl9DxhjvxOCbjjIM+DviYgCsyHe2/DdETo0m/wBnQhCG921gBmjXY2xS8DuthF+iqQ70wRPfZJB0Y
        9NkBV1yalx89IZrwIxwPPeFfgX6bB+vjRMxA9LWaoFOEzhXTEYieCHXdgc3QVlvjbkRfuy5fLOSKaDs0
        /Xn7J9CqP3V+26emdwV74qeIvpd+6YpBXzbssk4Te5q8tl/z8Q+APr8PugWg39pNrkegA6KeQOSy7VhE
        A78fP8dbMNmtC51RiL7HfmgWoXPZpfn8TU3pvQXLYljSmQWdToy+16o0ldjrCbjsOgvRgK/qK1gQw5be
        un8N0fdclRYVcS6btIxXEyv5nIthTgchL0b0vVehlYW8vJjLpm8iGuhV3AQdeBv29E7gLkQ/QxVaY9C5
        zrcBogFexaNYBl1JVxQ+gehnSaVTpV5t2HW+7yAa4Kl04HAtdC298L2A6GdKpSXHnetsOu9f90nwAXS1
        QxH9TKl0nYOvC3CdTVfnRQM7lfbsiybudCUds6h7xaB2IHKuk30V0aBOtQO63j8i+tlSeaKQ62S6PPe3
        iAZ1Ck2TzSGdGtQkpehnTKFLp70hqetcWyAa0Kk0DTeXNkX0M6bSrsTOdarPIRrMKW5Fbv0vop81hbYm
        d64z6W2vJutEgzmF1gvIrToToR6Ec51pNUQDOdXfIre07Hn0s6aaBuc60eaIBnGKB5BjeldUZwHUt8O5
        TrQXokGc4iTkWp0ZkdPhXCc6HNEgTrElck2rDUc/c4qD4FwnOg3RIE6R4+f/0bTkePQzp8j5nZHLrK8j
        GsQpFsMg00pF++AwfBpacETrDvwDml5rULMEo585xflwrhPdiGgQT0RbhA2qlaHP5ONNVvoVtKlIU4tz
        6AWl3xWRr4NznajfCTAPYRBpya0qKxTphWBDNFG/uw1pYpRzQ59Od/U7BXgQ1/9/AtHXnoiW/94Ndet3
        8VAtFurc0KcXgBcRDeKJfBdtti+ir5tKb98/gjr1+wKghVGc60T9rpP/Q7SVFidpYhtyvQi8A/32NKL7
        nYg+VjnXifREjgbxRB5BW2k7r+hr9kPzHBZH1RZGdH8ptJOyc53oKkSDeCJtfs79FqKv2a9LULU3Ibqv
        FPr+netE5yEaxCl0Xr7pFoXW2o++Xh3/hCppd+HoflKcA+c6keavR4M4hS7AaTqtKhx9rbp+hyofBf4F
        0f2kOBHOdaI6q+Eeg6b7e0RfqwnHIbU6ZyEOgXOdqM5CmG2cCtwO0ddqwky8Bim9Cs8gup+JtPHOyLlW
        qnPNu06zrYomew+ir9WUE5Da2YjuYzwvQ8cxnOtMMxAN5hSno8k+iOjrNEW/1VO39O5nRqBPAbrOpUk0
        0WBOobfVunCnqXZH9HWaVOUg3b2I7mMsn4RznWpHRIM51YfQVBsj+hpN+g0WREpa3CO6j7FsBec6leb1
        67NrNKBTaCXcedBEqyD6Gk3Twc+UlkDqhCldv7AQnOtcWt8/GtSp3okm0gab0f03rcoZjAsR3Uev6+Fc
        J+t36u2ou5D6tnqi6mxTlkpnMLTQSEqbIbqPXrp2wLlOtjzqXoL7JTTRPYjuv2nHIyVNm34Y0X2MegLa
        Ydi5zqbdbaPBXUUTvwXr7lScSmv/p25pfjKi+xj1UTjX6TQDrt918EZpHv+aqJMW8ojuuw2pxy602Ud0
        e9EKREvBuc53BaJBXoXWC6yzYnCb8wF6/SdS0lmOJ1HnPpwb+po6D68Xkn5PDerCorrvRFJp4U99xk9p
        rEuDV4dz2XQLooFelRYbSZ1809v9iO6zDdoMNCVN8um9rdZTcC6r9C6gqd/Aj2JdVE2bfkT31wadAk1p
        KrTg5+jtnkK/L3DODXWnYM4nSR06vbg/qlT1Etw6dA1Dapdi9HZau9C5LNNvO21wMecTpS5dUafFNlN6
        K6L7aMsKSGlv6M9fOeufnMu4t6HKrjwprkFKOoCoXX6i+2iDlgBLSW/5tSDqG2b9k3OZp2W0oidMv/SC
        kjp9+CJE99EGnbVIbaPZ/+tc9s2PfvcOGIuW/UpJK/lGt2+DLmDSRCTnXE96u6sNNqInTj9OQ0qvRXT7
        trwLzrkgrf2nCS/RE6eqHyE1/dnoPtqgLcidc2O0BvrdL6+XZh+m9FlEt2/DL5B6VaBzRbY2tMlG9ASq
        Yi+ktC2i27flLXDOjdOGmPOKuH6kXkKrJbZSl+Rqgqf1OpeQrp/XNtjRkyiF5uKnpuW7ovtow+1wziWk
        Kb/fRPRESqH1B1I6HNHt26A5EG1seupctmlZ8H6WEzsQKelzeXT7tlTdSdi54tNHgonWzet1OVLSZcGa
        eRfdRxu+BudcxbQn3heQ+m5A19Snrsk3qHUCRRuHpH5fzrmeVsQ5SJlItAFS2gfR7duiMx3OuRrp6kFN
        AR5vcZGPISVN141u35Zj4ZxroL+DZvY9i94n2g+Q2n3ovX1b7oBzrsF0Uc/OuACjVxO+iFchpSZXKZqI
        3rUsDedcC2kXHV3mqyW1U48DbI3oydqW98A5NyRp78G6lyBXoXcqzrkhqs6Vh1VpSbKmtj13zjXQIFcJ
        Eq2L6JwbkpbBoHYNktTTlM65AdXUzkUpboZzbog6CtGTtQ0vYwl0PV3avOSf/69z3e7NiJ6sbdkNXUtT
        tT+M7+MRjF6WrXUdL4N2XkrdpMW5oetn6H2ituVcdKVlcSZSTpdqu3O9SOj0at0WwRHQXpD62poQNhOX
        QMu/eQ9F12hnIBrUbdBvzS4sFqoLqrTSUvQzjOd/8Eb0k95FnICJ1onUR6nvwZOsXCMN+qrAYV8sdDr6
        WZRllKZmvxtV0iXcNyC6v/FoXsjr4Vzf6VLiZxANsDYciWFNL07a2Sj6vqvQ6dXDkJK2d7sJ0f2k0Per
        GZeaH+JcX825VXfbqsxaHGT6Ldz08RAt6jIvxkovvno7H922Kh0z8MVWrq/2RTSo2qCj6FrxaNjSb9Ho
        +63rW4jOEkyBDuxFt+mX3g3sDucqpem6g7wqsOpn5PHSkffxfsumpCP+0RoLTdG2bBtjtC3Q5lZtejHz
        zkyuUrpSLxpMbdDU5X7bBDpNpgVHH8ToC5dOlWnj1YuhF5gqOxQfg97vsQ0zcE/Pv2uL3l34uIBLTgfn
        ooHUBu0dWCX9NtsJdyG6v4j2XtwfEy1Kqm3bm9qsddjo8dLO0M5NmJYbiwZRW/T1UtJvsesR3UeKu6HF
        VcdqD0S3y4V2ndLEL+cmTJe6RoOoDYdionSU/GpEt69C6xHM+Rl8NL2z0BZm0W1yop/RHwfchH0O0QBq
        g/YpnKjjEN22H7q4Zz/M2aDXRJhMV6DuwVKXeVshGjxt0BNyvEVMdRBPn+Oj29ZxFbRG4cdR54q/LtJ1
        Cc6Nmd5y62h6NHjasD3GapDXJpQk9QpFV2jfQDRw2nA2xupLiG5j9ei0aRenZbsBNcitw/RuY6yPAbch
        uo3V9wKig6LOjSwFTTmNBk4b3oeoiabFWj2PY3E491fVmZ1W1a3oTQcAoz9rzerSAi1ugOlS22jAtKX3
        oiBduBP9OWue1oNwbq7WQDRY2nIa5kwr8kR/zpqnKdCpe0q6gtIlpNGAacOvMed6eprME/05a8fn4dxc
        6bdyNFjacjBGG+QVifbnU4M+K+DmSnPWo8HSFs3HX2u2p2b/OxucBzAVzs1K02QHeVWg6DeRzlFH/83a
        dzKc+0tNL1llw03Lta0D52a1N6KBYvnSIiJeTszNSnvgDfKqQBsO28G5Wd2IaJBYvjQPw7lZHY5okFje
        tDaEcyOrIxoglrdh3cDFTUIPIxokljctwe7cyKmIBojl7Vo4N7I5ogFi+VsPrvB0VaC2vY4GiOXt23Bu
        1lZc0QCx/GnbdFd4eyEaHJY/LRTrCu818FWBZdIkLZ0OdoV3A6IBYvk7B67wtKlENDgsf5oa7vUCCu9N
        iAaHlWEXuMJ7CNHgsPxdCld4n0U0OCx/z2NRuILbDNHgsDJo01ZXcFPgbbvKdTVc4V2MaHBY/rRu4DJw
        BbcnosFhZTgAruCWgK8KLNfNcIWnFWOiwWFl0AauruAORTQwrAxHwhXcoHcQtuFyD1zhPYpocFgZ9EvA
        FdxZiAaGleF4uILbHtHAsDLMgCu4heHdfMu2HFzBXYNoYFgZdoUruIMRDQwrwxlwBbcaooFhZbgXrvC8
        SEi5tGCoFox1BXc6osFhZdgRruC2QTQwrAynwBWcVot9DtHgsPzdCVd42kMuGhyWP00NXwSu4PZHNDis
        DNvCFdxKiAaGleFEuMK7H9HgsPx5lSA38hlEg8Py9yIWgiu4dyIaHFaGzeEKbnHoyrBocFj+joErvPsQ
        DQ7L3/fhCu+LiAaH5U97By4IV3B7IxocVoaN4ApuFUQDw8pwIFzhPYlocFj+tH28K7z/QjQ4LH+XwxXe
        qYgGh+XPKwS5kX9FNDgsf8/CFd4WiAaHlWFZuIKbhmhgWBnWhyu4eaCLQqLBYfnbA67wtHtsNDgsf0fD
        Fd43EA0Oy985cIV3PqLBYfnzpCA3cj2iwWH5+zlcwekg4GOIBoflT2tCLABXaN4w1FaFK7A3QleDRYPC
        yrE1XGG9A79ENCCsLFoXwiX2OuyGD+E4nAWdRrsIn8ZHoP++MVbGKzFMaWswfd/aISYaDFae98KN0RRs
        BS2j3e8aer+BZl5dhTPwAegFYpBbNeuF6wQ8jeh7tHL9M1zQzngQ0YPWlMdxLbQ4w37YAIuibnrhWg+H
        4Uq8hOjrm+kXkpsjTZC4EdGDNSg6P/td6CKdT+IA6AVpE2wKfYbX2u6azbcDtN+f/txXoPP6zyC6X7Ne
        GluO5sXpiB4ks1wdhOLTwbrLED1AZjnTgeui08E4bZgYPThmudNxomJ7Ax5A9MCYleBIFJl2Rrkb0YNi
        Vopi1wTQRTzRA2JWko+juN6N6MEwK42uDC0qTYGdgejBMCvNJ1BUOyF6IMxK9H4U1S2IHgizEm2HYloS
        0YNgVqq3opi2RfQgmJVqeRSTTnlED4JZibQuxHwopi8geiDMSqRVoYrqPxA9EGYlugNFpZlP0QNhVqLL
        UVRaUCN6IMxKdCaK63ZED4ZZaQ5FcU1H9GCYlWZLFNlJiB4Qs5IsjWLTSijRg2JWguJOAUZthq/jBUQP
        klmuvg03O60LqN1+tDDoTdB+AL9H9MCZ5UDXxLgJ0rJhy2ElrA5NnNgIOniiWVS7Yh9oc4UP4yhogQVt
        E6ZTLNr0w9tv2zDaBW5ALYJ1oReLE6ELMPQuw3v02WTR7tBuktM7jDdD7yT0lsyLlNogaOcorYzlhrBp
        OBDX4UVEf4FmdWjrO9eBFsce0JmKmYj+Ms2q0i7VrmMtgG1wHv6I6C/WLMX74Drca/EZeBdg60dRy4Dl
        3GLQqccnEf1Fm/V6CVPhMkp/oboW4SeI/tLNRt0Ll2nzYk/oOu/oL9/sErjMezVOhd7uRYPAylXkIiCl
        tiZuRjQQrEzHwxXUK7AfnkY0IKwsh8AVmGY86hqCaFBYOfaFKzjNO/gtosFh+dservBejx8gGiCWt43h
        3KxThh+FzxSUZUc495fWx8OIBovl5wg4N1dasORCRAPG8qIDwc6F6QixJxjl7TY4N2ar4k5Eg8e6T4vd
        Ojdu80PTjf+EaBBZty0P5yZsC/gAYV4egd7lOZfUQtAy5z5d2F3P4QJsDi8G6vpqbfwQ0QCz4XQr3o9F
        4Vzt5oP2VNRvlGjA2eR7Ap+CNrJxrpV0EOl0PI9oENpgafl4bWun3aqmwLmB5BeCyXUPtCVd0dt8u8nP
        LwSDo5mcn8c6cG6oWgq61lynmqLBa/3R9RhXY3doOznnhjrNNNTn0Svhi4n69xCOhqZvO9fJVoGOSv8K
        0SC3uf0B52ITaDk357JIlxdPxzXwu4K/pg073wut6Oxc1q0IbYf+GKInQyn085+A1eBccenCIh0ruAKl
        XGr8ArTb87bQsRLnHK2Af8dPET1xuk6XUR8Irc7snBsjTVbRunV3IHoidYn2YjgNa8E5V7FtoINj0ZNr
        WL2M72AXLADnXM02hWa2RU+4YTEDugjKi20410I6YPZvGKaZiDNxNjaEc24A6ZTZZH8s+G/sDS2W4pwb
        cDpQqHcDg7yg6FEci5XhnBuCtIx5my8Cmt2o/RK2hJfScm4Ia+NF4HZ8EIvBOTfkNfEi8CS0FPoacM51
        rMMRPbHHo6W0LscO8FJaznU4PYF/jOiJ3us+HIJl4JzLJB2si57w8juciXXhnMs0rY47+qTXcYFrsQem
        wjmXeVprQB8FPoZp+hdu2BoZ+X+vhPyn3TtlqAAAAABJRU5ErkJggg==
</value>
  </data>
</root>